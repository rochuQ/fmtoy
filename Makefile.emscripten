OBJS=fmtoy.o fmtoy_ym2151.o fmtoy_ym2203.o fmtoy_ym2608.o fmtoy_ym2610.o fmtoy_ym2610b.o fmtoy_ym2612.o chips/fm.o chips/fm2612.o chips/ym2151.o chips/ymdeltat.o glue.o
EXPORTED_FUNCTIONS=[\
	"_fmtoy_init",\
	"_fmtoy_load_opm_voice", \
	"_fmtoy_note_on", \
	"_fmtoy_note_off", \
	"_fmtoy_render", \
	"_fmtoy_get_buf_l", \
	"_fmtoy_get_buf_r", \
	"_fmtoy_program_change", \
	"_fmtoy_pitch_bend", \
	"_fmtoy_cc", \
	"_fmtoy_channel_name", \
	"_fmtoy_opm_voice_init", \
	"_fmtoy_opm_voice_set_lfo", \
	"_fmtoy_opm_voice_set_noise", \
	"_fmtoy_opm_voice_set_pan", \
	"_fmtoy_opm_voice_set_feedback", \
	"_fmtoy_opm_voice_set_connection", \
	"_fmtoy_opm_voice_set_pms_ams", \
	"_fmtoy_opm_voice_set_slot_mask", \
	"_fmtoy_opm_voice_set_operator_dt1_mul", \
	"_fmtoy_opm_voice_set_operator_tl", \
	"_fmtoy_opm_voice_set_operator_ks_ar", \
	"_fmtoy_opm_voice_set_operator_ame_d1r", \
	"_fmtoy_opm_voice_set_operator_dt2_d2r", \
	"_fmtoy_opm_voice_set_operator_d1l_rr", \
	"_opm_voice", \
	"_fmtoy" \
]
EXTRA_EXPORTED_RUNTIME_METHODS=["ccall", "cwrap"]
CFLAGS=-Wall
LDFLAGS=-s EXPORTED_FUNCTIONS='$(EXPORTED_FUNCTIONS)' -s EXTRA_EXPORTED_RUNTIME_METHODS='$(EXTRA_EXPORTED_RUNTIME_METHODS)' -s USE_ES6_IMPORT_META=0
EMCC=emcc
EMPP=em++

all: fmtoyWasm.js fmtoyAsm.js fmtoyAudioWorklet.js

fmtowWasm.wasm fmtoyWasm.js: $(OBJS)
	$(EMCC) $^ -s WASM=1 -s EXPORT_ES6=1 -s MODULARIZE=1 $(LDFLAGS) -o $@
	sed -i '1s/^/\/* eslint-disable *\/ /' $@

fmtoyWorkletWasm.js: $(OBJS)
	$(EMCC) $^ -s WASM=1 -s ENVIRONMENT=web -s EXPORT_ES6=1 -s MODULARIZE=1  -s SINGLE_FILE=1 $(LDFLAGS) -o $@
	sed -i '1s/^/\/* eslint-disable *\/ /' $@
	sed -i "s/typeof window == 'object' || typeof importScripts == 'function'/1/g" $@

fmtoyAsm.js: $(OBJS)
	$(EMCC) $^ -s WASM=0 -s EXPORT_ES6=1 -s MODULARIZE=1 -s ENVIRONMENT=web $(LDFLAGS) -o $@
	sed -i '1s/^/\/* eslint-disable *\/ /' $@

fmtoyAudioWorklet.js: fmtoyWasm.wasm fmtoyAudioWorklet.js.template
	> $@
	echo 'const wasm = new Uint8Array([' >> $@
	cat $< | xxd -c 32 -i | sed -e 's/, /,/g' >> $@
	echo ']);' >> $@
	cat fmtoyAudioWorklet.js.template >> $@

%.o: %.c
	$(EMCC) $(CFLAGS) -c $< -o $@

clean:
	rm -f *.js *.wasm *.o chips/*.o

